@page
@model LIMS.ManagerModel
@{
    ViewData["Title"] = "Manager";
}

@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery AntiForgery;

@if (Model.HttpContext.Session.GetString("accountType") != "manager")
{
    <script>
        location.replace("/Index");
    </script>
}
else
{
<div class="container w-100">
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item">
            <a class="nav-link" id="orders-tab" data-toggle="tab" href="#orders" role="tab" aria-controls="orders" aria-selected="false">Orders</a>
        </li>
        <li class="nav-item">
            <a class="nav-link active" id="requests-tab" data-toggle="tab" href="#requests" role="tab" aria-controls="requests" aria-selected="true">Requests</a>
        </li>
    </ul>

    <div class="tab-content" id="myTabContent">
        <div class="tab-pane fade show active" id="orders" role="tabpanel" aria-labelledby="orders-tab">
            <div class="d-flex w-100">
                <table class="table table-hover table-striped mx-auto mt-4">
                    <thead id="users-header">
                        <tr>
                            <th scope="col">
                                OrderID
                            </th>
                            <th scope="col">
                                ISBN
                            </th>
                            <th scope="col">
                                Quantity
                            </th>
                            <th scope="col">
                                Date Ordered
                            </th>
                            <th scope="col">
                                Date Expected
                            </th>
                            <th scope="col">
                                Date Recieved
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var row in Model.OrderList)
                        {
                        <tr scope="row">
                            <td scope="col">
                                @row.OrderId
                            </td>
                            <td scope="col">
                                @row.ISBN
                            </td>
                            <td scope="col">
                                @row.Quantity
                            </td>
                            <td scope="col">
                                @row.DateOrdered
                            </td>
                            <td scope="col">
                                @row.DateExpected
                            </td>
                            <td scope="col">
                                @row.DateRecieved
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="tab-pane fade" id="requests" role="tabpanel" aria-labelledby="requests-tab">
            <div class="d-flex">
                <table class="table table-hover table-striped mx-auto mt-4">
                    <thead id="users-header">
                        <tr>
                            <th scope="col">
                                ISBN
                            </th>
                            <th scope="col">
                                User Count
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var row in Model.BookRequestList)
                        {
                            <tr scope="row">
                                <td scope="col">
                                    @row.ISBN
                                </td>
                                <td scope="col">
                                    @row.UserCount
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
}

<script>
    $(document).ready(function () {
        // Initialize tooltips
        $(function () {
          $('[data-toggle="tooltip"]').tooltip()
        })

        $("#checkout-button").on("click", function () {
            var bookId = $("#checkout-bookid").val().trim();
            var username = $("#checkout-username").val().trim();
            // ToDo: Validate input
            if (false) {
                createToast("alert","Please provide a valid input",125)
            } else {
                var postData = {
                    action: 'checkout',
                    bookId: bookId,
                    username: username,
                }
                console.log(postData);
                $("#checkout-button").prop("disabled", true);
                $("#checkout-button").addClass("bg-secondary text-white");

                $.ajax({
                    type: "POST",
                    url: "Employee",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    headers: {
                        'RequestVerificationToken': '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken'
                    },
                    data: JSON.stringify(postData),
                    success: function (data) {
                        console.log("Successfully sent ajax checkout!");
                        console.log(data);
                        var json = JSON.parse(data);
                        if (json.success === "False") {
                            if (json.reason === "unknown") {
                                createToast("alert", "There was an internal error processing your checkout!", 125);
                            } else if (json.reason === "badUsername") {
                                createToast("alert", "Invalid username!", 125)
                            } else if (json.reason === "badBookId") {
                                createToast("alert", "Invalid bookId!", 125);
                            } else if (json.reason === "multipleCheckout") {
                                createToast("alert", "User has a book checked out already!", 125);
                            } else if (json.reason === "unavailable") {
                                createToast("alert", "Book is not available (either checked out or reserved by another user)!", 125);
                            }
                        } else {
                            createToast("success", "The book has been checked out!", 125);
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        // CHECK REASON FOR ERROR IN data
                        console.log("AJAX POST ERROR");
                        console.log(xhr);
                        console.log(textStatus);
                        console.log(errorThrown);
                        createToast("alert", "There was an internal error processing your checkout!", 125);
                    }
                }); // END of AJAX
                $("#checkout-button").prop("disabled", false);
                $("#checkout-button").removeClass("bg-secondary text-white");
            }
        }); // END of checkout

    });
</script>

